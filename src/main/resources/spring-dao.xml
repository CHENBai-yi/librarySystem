<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!-- 配置整合mybatis过程 -->
    <!-- 1.配置数据库相关参数properties的属性：${url} -->
    <!--    <context:property-placeholder location="classpath:db.properties" />-->
    <context:property-placeholder location="classpath:db2.properties"/>
    <context:annotation-config/>
    <!-- 2.数据库连接池 -->
    <!--		<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">-->
    <!--				&lt;!&ndash; 配置连接池属性 &ndash;&gt;-->
    <!--				<property name="driverClass" value="${jdbc.driver}"/>-->
    <!--				<property name="jdbcUrl" value="${jdbc.url}"/>-->
    <!--				<property name="user" value="${jdbc.username}"/>-->
    <!--				<property name="password" value="${jdbc.password}"/>-->
    
    <!--				&lt;!&ndash; c3p0连接池的私有属性 &ndash;&gt;-->
    <!--				<property name="maxPoolSize" value="30"/>-->
    <!--				<property name="minPoolSize" value="10"/>-->
    <!--				&lt;!&ndash; 关闭连接后不自动commit &ndash;&gt;-->
    <!--				<property name="autoCommitOnClose" value="false"/>-->
    <!--				&lt;!&ndash; 获取连接超时时间 &ndash;&gt;-->
    <!--				<property name="checkoutTimeout" value="10000"/>-->
    <!--				&lt;!&ndash; 当获取连接失败重试次数 &ndash;&gt;-->
    <!--				<property name="acquireRetryAttempts" value="2"/>-->
    <!--		</bean>-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <!-- 配置连接池属性 -->
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxWait" value="60000"/>
    </bean>
    
    <!-- 3.配置SqlSessionFactory对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置MyBaties全局配置文件:mybatis-config.xml -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        
        <!-- 扫描sql配置文件:mapper需要的xml文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
        <property name="typeAliasesPackage" value="com.bai.pojo"/>
    </bean>
    
    <!-- 4.配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 给出需要扫描Dao接口包 -->
        <property name="basePackage" value="com.bai.dao"/>
    </bean>
    <bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="dataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
        <property name="rollbackOnCommitFailure" value="true"/>
        <property name="globalRollbackOnParticipationFailure" value="true"/>
        <property name="nestedTransactionAllowed" value="true"/>
        <property name="failEarlyOnGlobalRollbackOnly" value="true"/>
    </bean>
    <!-- 4.扫描web相关的bean -->
    <context:component-scan base-package="com.bai.service,com.bai.dao"/>
    <tx:annotation-driven transaction-manager="dataSourceTransactionManager" proxy-target-class="true"/>
</beans>